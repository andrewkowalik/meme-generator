<div id="new-meme-box">
<input id="inputFormTop" type="text" placeholder="Top Text...">
<input id="inputFormBot" type="text" placeholder="Bottom Text...">
<br>
<button type="button" id="saveMeme">Save!</button>


<div id="newMeme"></div>
  <h2><%= meme.escape('name') %></h2>
</div>




<script>
$(function () {
  var imageObj = new Image();
  imageObj.src = 'images/templates/<%= meme.escape('file_name') %>';
  imageObj.onload = function () {
    var width = imageObj.width;
    var height = imageObj.height;

    if (width > 450) {
      change = 450 / width;
      imageObj.width = 450;
      imageObj.height = height * change;
    }
    if (height > 415) {
      change = 415 / height;
      imageObj.height = 415;
      imageObj.width = width * change;
    }

    initialize(imageObj.width, imageObj.height);
    run();
  };

  function initialize(width, height) {

    $('#newMeme').html('\
      <canvas id="myCanvas" \
      width="' + width + '" \
      height="' + height + '" \
      ></canvas>')
  };

  function run() {
    var canvas = document.getElementById("myCanvas");
    var context = canvas.getContext("2d");
    context.font = "30px Helvetica";
    context.fillStyle = 'white';
    context.strokeStyle = 'black';
    context.miterLimit = 2;
    context.lineJoin = 'circle';
    context.textAlign = "center";
    context.drawImage(imageObj, 0, 0, imageObj.width, imageObj.height );

    function clear() {
    context.save();
    context.clearRect(0, 0, imageObj.width, imageObj.height);
    context.drawImage(imageObj, 0, 0, imageObj.width, imageObj.height );
  };

  function fragmentText(text, maxWidth) {
    text = text.toUpperCase();
    var words = text.split(' ');
    var lines = [];
    var line = "";

    if (context.measureText(text).width < maxWidth) {
      return [text];
    }

    while (words.length > 0) {
      while (context.measureText(words[0]).width >= maxWidth) {
        var tmp = words[0];
        words[0] = tmp.slice(0, -1);
        if (words.length > 1) {
          words[1] = tmp.slice(-1) + words[1];
        } else {
          words.push(tmp.slice(-1));
        }
      }

      if (context.measureText(line + words[0]).width < maxWidth) {
        line += words.shift() + " ";
      } else {
        lines.push(line);
        line = "";
      }
      if (words.length === 0) {
        lines.push(line);
      }
    }
    return lines;
  };

  function drawTextTop() {
    clear();
    var textTop = $('#inputFormTop').val();
    var textBot = $('#inputFormBot').val();
    var width = imageObj.width;
    var height = imageObj.height;
    var linesTop = fragmentText(textTop, (width*.95));
    var linesBot = fragmentText(textBot, (width*.95));

    linesTop.forEach(function(line,i) {
      context.lineWidth = 7;
      context.strokeText(line, width/2, 35 + (i*30))
      context.lineWidth = 1;
      context.fillText(line, width/2, 35 + (i*30))
    });

    botLength = linesBot.length
    linesBot.forEach(function(line,i) {
      context.lineWidth = 7;
      context.strokeText(line, width/2, height - (30 * (botLength -i)));
      context.lineWidth = 1;
      context.fillText(line, width/2, height - (30 * (botLength -i)));
    });
  };

  $('#inputFormTop').keyup( function(event) {
    drawTextTop();
  });

  $('#inputFormBot').keyup( function(event) {
    drawTextTop();
  });

  }
});
</script>